// See the NOTICE file distributed with this work for additional information
// regarding copyright ownership.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// nf-core modules test seqregion/processseqregions
nextflow_process {

    name "Test Process SEQREGION_PROCESSSEQREGIONS"
    script "../main.nf"
    process "SEQREGION_PROCESSSEQREGIONS"

    tag "seqregion"
    tag "seqregion/processseqregions"

    test("Process sequence regions [stub]") {

        when {

            options "-stub"

                process {
                    """
                    input[0] = [[ test_id:'dummy_core_db_core_110_1', species:'Genus species'],
                    file("${projectDir}/tests/modules/ensembl/seqregion/processseqregions/genome.json", checkIfExists: true),
                    file("${projectDir}/tests/modules/ensembl/seqregion/processseqregions/assembly_report.txt", checkIfExists: true),
                    file("${projectDir}/tests/modules/ensembl/seqregion/processseqregions/genome.gbff", checkIfExists: true)]
                    """
                }
            }

            then {
                assert snapshot(
                    process.out.seq_region.collect {
                        it.collect { it instanceof String && file(it).exists() ? file(it).name : it }
                        }
                    ).match("seq_region")

            assertAll(
                    { assert process.success },
                    { assert snapshot(process.out).match() },
                    { assert process.out.seq_region.size() == 1 },
                    { assert process.out.seq_region != null }
            )
        }
    }
}