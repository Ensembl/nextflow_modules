// See the NOTICE file distributed with this work for additional information
// regarding copyright ownership.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// nf-core modules test metadata/genomesummary
nextflow_process {

    name "Test Process METADATA_GENOMESUMMARY"
    script "../main.nf"
    process "METADATA_GENOMESUMMARY"

    tag "metadata"
    tag "metadata/genomesummary"

    test("Metadata 'genome summary' test-A [real test]") {
        
        when {
            process {
                """
                input[0] = [ 
                    [accession: 'GCA_000001215.4'], 
                    file("${projectDir}/tests/modules/ensembl/metadata/genomesummary/meta-query.json", checkIfExists: true),
                    file("${projectDir}/tests/modules/ensembl/metadata/genomesummary/ncbi_genome-summary.json", checkIfExists: true)
                    ]
                """
            }
        }

        then {   
            // Since the start date and version is not constant we want to snapshot the file without them
            def genome_lines = path(process.out.meta_json.get(0).get(1)).readLines()
            def static_text = genome_lines[0..11] + genome_lines[14..19]
            assertAll(
                    { assert process.success },
                    { assert snapshot(process.out.versions).match() },
                    { assert snapshot(static_text).match("genome.json") },
                    { assert process.out.meta_json.size() == 1 },
            )
        }
    }

    test("Metadata 'genome summary' test-B [stub]") {
        
        when {
            options "-stub"
            process {
                """
                input[0] = [ 
                    [accession: 'GCA_000111222.3'], 
                    file("query.json"),
                    file("ncbi-genome.json")
                    ]
                """
            }
        }

            then {
            assertAll(
                    { assert process.success },
                    { assert snapshot(process.out).match() },
                    { assert process.out.meta_json.size() == 1 },
                    { assert process.out.versions != null }
            )
        }
    }
}
